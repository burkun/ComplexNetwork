<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:helper="helper.*"
			   width="100%" height="100%" minWidth="955" minHeight="600"
			   creationComplete="application_creationCompleteHandler(event)"
			   viewSourceURL="srcview/index.html">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.components.Label;
			
			import helper.ChartDegree;
			import helper.DataSet;
			import helper.DataView;
			import helper.ElementGenerater;
			import helper.ExcelReader;
			import helper.Global;
			import helper.NodeView;
			import helper.OpenFileBunding;
			import helper.PlotDotChart;
			import helper.SaveFileBunding;
			import helper.Simulations;
			
			protected function application_creationCompleteHandler(event:FlexEvent):void
			{
				var reader:ExcelReader = new ExcelReader();
				
				var openBunding:OpenFileBunding = new OpenFileBunding(open,new FileFilter("2003-excel","*.xls"),function(data:*):void{
					open.visible = false;
					reader.ReadByBinArray(data);
					genGraph();
					lab1.visible = true;
					lab2.visible = true;
					lab3.visible = true;
					lab4.visible = true;
					var savef:SaveFileBunding = new SaveFileBunding(save,function():void{
						trace("over");
					});
					var res:String = "";
					for(var i:uint=0;i<_arrRes.length;i++){
						var arr:Array = _arrRes[i]
						var arr1:Array = _arrRes1[i]
						res+="random,,,inten\n";
						for(var j:uint=0;j<arr.length;j++){
							res+=(arr[j].S+","+arr[j].f+","+arr1[j].S+","+arr1[j].f+"\n");
						}
					}
					savef.data = res;
				});

			}
			protected function genGraph():void
			{
				var i:uint;
				for(i=0;i<Global.sheets.length;i++){
					ElementGenerater.generNode(i,Global.sheets[i]);
					var view:NodeView = new NodeView();
					view.setNodeLine(Global.pointsArrs[i],Global.linesArrs[i]);
					view.setLabelInfo(Global.BEGINCOLOR,Global.ENDCOLOR,Global.sheets[i].maxminDegree[1],Global.sheets[i].maxminDegree[0],"Degree");
					view.viewTitle = Global.sheets[i].name;
					main.addElement(view);
				}
				for(i=0;i<Global.sheets.length;i++){
					var chart:ChartDegree = new ChartDegree();
					chart.dataSet = Global.sheets[i];
					chart.viewTitle = Global.sheets[i].name;
					degree.addElement(chart);
					
					
				}
				for(i=0;i<Global.sheets.length;i++){
					var sim:Simulations = new Simulations(Global.sheets[i] as DataSet);
					var res:ArrayCollection=sim.ifRandomAttack();
					var res1:ArrayCollection=sim.ifIntentionalAttack();
					var plot:PlotDotChart = new PlotDotChart();
					_arrRes[i] = res;
					_arrRes1[i] = res1;
					plot.dataRandom = res;
					plot.dataIntent= res1;
					plot.viewTitle = Global.sheets[i].name;
					db.addElement(plot);
				}
				var table:DataView = new DataView();
				table.data = Global.sheets;
				summ.addElement(table);
			}
			
			private var _arrRes:Array = new Array();
			private var _arrRes1:Array = new Array();
			
			
			
		]]>
	</fx:Script>
	
	<s:Button id="open" label="Please open the data file!" horizontalCenter="0" top="50" height="20" depth="10" >
		
	</s:Button>
	<s:Button id="save" label="save" horizontalCenter="0" top="80" height="20" depth="10" >
		
	</s:Button>
	<s:Scroller width="100%" height="100%">	
	<s:Group width="100%" height="100%" top="">
			<s:Group  width="900" horizontalCenter="0" top="40"> 
				<s:layout>
					<s:VerticalLayout>
						
					</s:VerticalLayout>
				</s:layout>
				<s:Label text="Graphs" fontWeight="bold" fontStyle="italic" fontSize="30" visible="false" id="lab1"></s:Label>
				<s:Group id="main" width="100%">
					<s:layout>
						<s:VerticalLayout>
							
						</s:VerticalLayout>
					</s:layout>
				</s:Group>
				<s:Label text="Node-degree Distribution" fontWeight="bold" fontStyle="italic" fontSize="30" visible="false" id="lab2"> </s:Label>
				<s:Group id="degree" width="100%">
					<s:layout>
						<s:VerticalLayout>
							
						</s:VerticalLayout>
					</s:layout>
				</s:Group>
				<s:Label text="Dynamical Behaviors" fontWeight="bold" fontStyle="italic" fontSize="30" visible="false" id="lab3"></s:Label>
				<s:Group id="db" width="100%">
					<s:layout>
						<s:VerticalLayout>
							
						</s:VerticalLayout>
					</s:layout>
				</s:Group>
				<s:Label text="Summary" fontWeight="bold" fontStyle="italic" fontSize="30" visible="false" id="lab4"></s:Label>
				<s:Group id="summ" width="100%">
					<s:layout>
						<s:VerticalLayout>
							
						</s:VerticalLayout>
					</s:layout>
				</s:Group>
			</s:Group>
		
	</s:Group>
</s:Scroller>
</s:Application>
